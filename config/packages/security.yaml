security:
  password_hashers:
    Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

  providers:
    multi_user_provider:
      id: App\Security\MultiUserProvider # Assure que le provider est bien enregistré comme service

  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false

    main:
      lazy: true
      pattern: ^/
      form_login:
        login_path: login
        check_path: login
        username_parameter: username
        password_parameter: password
        default_target_path: /mescours
        provider: multi_user_provider
        enable_csrf: true # Active la protection CSRF pour plus de sécurité
      logout:
        path: logout
        target: login

  access_control:
    - { path: ^/login, roles: PUBLIC_ACCESS }
    - { path: ^/mescours, roles: ROLE_USER }

when@test:
  security:
    password_hashers:
      Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
        algorithm: auto
        cost: 4 # Lowest possible value for bcrypt
        time_cost: 3 # Lowest possible value for argon
        memory_cost: 10 # Lowest possible value for argon